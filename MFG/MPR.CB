0010 REM "MPR - Production Forecast Worksheet"
0020 REM "Program MPR.CB"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open/Lock Files"
0110 CALL "SYC.GA",7,1,"","",STATUS
0120 IF STATUS THEN GOTO 9900
0200 REM " --- IOLIST's"
0220 IVM01A: IOLIST B0$,B1$(1),B2$,B3$,B4$,B5$,B6$,B[ALL]
0230 IVM12A: IOLIST C0$,C1$,C2$,C[ALL]
0250 MPM01A: IOLIST D0$,D1$,D2$,S[ALL]
0500 REM " --- Initializations"
0505 PRECISION IVS01_PRECISION
0510 DIM J2$(4*M2+M1,"-"),J3$(5,"_"),O[3],DATES$[MP]
0520 DIM B1$(P[2]+P[3]+P[4]),B[12],HEADER$[4]
0540 LET H5$="",W0$="",W1$="",H=0,H0=132
0545 LET WHEN$=F0$(7,3),CLOCK$=""
0550 LET T1$=" Jan  Feb  Mar  Apr  May  Jun  Jul  Aug  Sep  Oct  Nov  Dec "
0555 LET H8$="Number Of Periods: "+STR(S[0]),DATES$[1]=BEGDATE$
0560 LET H9$="  Days Per Period: "+STR(S[1]),HR=H0-MAX(LEN(H8$),LEN(H9$))
0565 LET PREFIX$=FNP$(N0$+"C"+WHSE$+PRODUCT$),J3$(LEN(J3$))=" "
0570 CALL "SYC.RM",M2$,M2,15,15
0575 FOR X=0 TO 3
0580 LET O[X]=H0-M2*(4-X)
0585 NEXT X
0590 LET HC=INT((H0-MAX(LEN(H6$),LEN(H7$)))/2),NEEDED=6,POSITION=40
0600 REM " --- Build forecast entry lines"
0610 IF S[0]<2 THEN GOTO 0650
0620 FOR X=2 TO S[0]
0625 LET BEGDATE$=DATES$[X-1],ENDDATE$="",DAYS=S[1]
0630 CALL "SYC.CA",BEGDATE$,ENDDATE$,DAYS
0635 LET DATES$[X]=ENDDATE$
0640 NEXT X
0650 FOR X=1 TO S[0]
0655 LET M=NUM(DATES$[X](3,2)),D=NUM(DATES$[X](5,2))
0660 LET X1$=X1$+T1$((M-1)*5+1,5),X2$=X2$+STR(D:"##00-"),X3$=X3$+J3$
0665 NEXT X
0670 IF S[0]<14 THEN GOTO 0700
0675 LET X4$=X1$(66),X1$=X1$(1,65)
0680 LET X5$=X2$(66),X2$=X2$(1,65)
0685 LET X6$=X3$(66),X3$=X3$(1,65),NEEDED=10
0700 REM " --- Background"
0710 CALL "SYC.NB","Printing",7+P[0],COLUMN
0800 REM " --- Initialize Period Descriptions "
0810 LET PD$=CURR_PD$,YR$=CURR_YR$
0820 FOR LOOP=1 TO 4
0840 LET HEADER$[LOOP]=PD$+"/"+FNYY21_YY$(YR$)
0850 LET PERIOD=NUM(PD$)-1,PD$=STR(PERIOD:"00")
0860 IF PERIOD>0 THEN GOTO 0890
0870 LET YR$=FNYEAR_YY21$(FNYY_YEAR(YR$)-1)
0880 LET PD$=TOTAL_PD$
0890 NEXT LOOP
1000 REM " --- Position File"
1090 READ (IVM03_DEV,KEY=PREFIX$,DOM=1100)
1100 REM " --- Read next sort record"
1120 LET K0$=KEY(IVM03_DEV,END=4000)
1130 READ (IVM03_DEV)
1140 IF POS(PREFIX$=K0$)<>1 THEN GOTO 4000
1150 PRINT @(COLUMN,11),K0$(4,2)," ",K0$(6,3)," ",K0$(9),
1200 REM " --- Additional reads"
1210 DIM PD[4]
1220 LET B0$=N0$+K0$(9)
1240 FIND (IVM01_DEV,KEY=B0$,DOM=1100)IOL=IVM01A
1300 REM " --- Get Item Usage Information "
1310 FOR LOOP=1 TO 4
1320 LET USAGE_KEY$=N0$+K0$(4,2)+K0$(9,20)+HEADER$[LOOP](4,2)+HEADER$[LOOP](1,
1320:2)
1330 DIM C[12]
1340 FIND (IVM12_DEV,KEY=USAGE_KEY$,DOM=1350)IOL=IVM12A
1350 LET PD[LOOP]=C[4]
1360 NEXT LOOP
2000 REM " --- Print detail line"
2010 LET L=L+NEEDED
2020 IF L>L9 THEN GOSUB 5000
2030 PRINT (7)""
2040 PRINT (7)K0$(9)," ",@(P[0]),FNZ$(B1$,P[2],P[3],P[4]),@(O[0]),PD[1]:M2$,@(
2040:O[1]),PD[2]:M2$,@(O[2]),PD[3]:M2$,@(O[3]),PD[4]:M2$
2050 PRINT (7)""
2060 PRINT (7)@(POSITION),X1$
2070 PRINT (7)@(POSITION),X2$
2080 PRINT (7)@(POSITION),X3$
2100 REM 
2110 IF S[0]<14 THEN GOTO 3900
2120 PRINT (7)""
2130 PRINT (7)@(POSITION),X4$
2140 PRINT (7)@(POSITION),X5$
2150 PRINT (7)@(POSITION),X6$
3900 REM 
3990 GOTO 1100
4000 REM " --- All done"
4090 GOTO 9900
5000 REM " --- Heading"
5010 LET L=HEADINGS+9
5020 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,H,H0,WHEN$,CLOCK$,STATUS
5030 IF STATUS>0 THEN EXITTO 9900
5050 PRINT (7)H4$,@(HC),H6$,@(HR),H8$
5060 PRINT (7)H5$,@(HC),H7$,@(HR),H9$
5065 PRINT (7)""
5070 PRINT (7)"Item",@(P[0]),"Description",@(O[0]+4),HEADER$[1]+" Usage",@(O[1
5070:]+4),HEADER$[2]+" Usage",@(O[2]+4),HEADER$[3]+" Usage",@(O[3]+4),HEADER$[
5070:4]+" Usage"
5090 RETURN
8000 REM " --- Functions "
8080 DEF FNP$(Q$)=CVS(Q$,2)
8090 DEF FNZ$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
8110 REM " --- FNYEAR_YY21$ Convert Numeric Year to 21st Century 2-Char Year"
8115 DEF FNYEAR_YY21$(Q)=FNYY_YY21$(STR(MOD(Q,100):"00"))
8120 REM " --- FNYY_YY21$ Convert 2-Char Year to 21st Century 2-Char Year"
8125 DEF FNYY_YY21$(Q1$)
8130 LET Q3$=" ABCDE56789ABCDEFGHIJ",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABC
8130:DEFGHIJ"))
8135 RETURN Q1$
8140 FNEND
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABC
8155:DEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN
9900 RUN "SYS.AA"
9999 END
