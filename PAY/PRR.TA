0010 REM "PRR - G/L Distribution Report"
0020 REM "Program PRR.TA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0050 BEGIN
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open/Lock Files
0110 LET FILES=10
0120 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0125 LET FILES$[1]="PRE-01",FILES$[2]="PRE-11",FILES$[3]="PRE-21"
0130 LET FILES$[4]="PRE-31",FILES$[5]="PRE-41",FILES$[6]="PRM-01"
0135 LET FILES$[7]="PRM-10",FILES$[8]="SYS-01"
0160 CALL "SYC.DA",1,1,8,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0170 IF STATUS>0 THEN GOTO 9900
0180 LET PRE01_DEV=CHANNELS[1],PRE11_DEV=CHANNELS[2],PRE21_DEV=CHANNELS[3]
0185 LET PRE31_DEV=CHANNELS[4],PRE41_DEV=CHANNELS[5],PRM01_DEV=CHANNELS[6]
0190 LET PRM10_DEV=CHANNELS[7],SYS01_DEV=CHANNELS[8]
0200 REM " --- IOLists
0210 PRE01A: IOLIST A0$
0220 PRE11A: IOLIST A0$,A[ALL]
0230 PRE21A: IOLIST A0$,A[ALL]
0240 PRE31A: IOLIST A0$,A[ALL]
0250 PRE41A: IOLIST A0$,A[ALL]
0260 PRM01A: IOLIST B0$,B1$
0270 PRM10A: IOLIST Y0$(1)
0280 PRM10E: IOLIST Z0$,Z1$,Z2$,Z3$,Z4$,Z5$,Z6$,Z7$,Z8$
0300 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0310 GLS01A: IOLIST X$,G1$,G2$,G3$,G4$,G5$,G6$,G7$
0320 PRS01A: IOLIST P0$,P1$,P2$,P3$,P4$,M0$,M1$,M2$,M3$
0330 PRS01B: IOLIST *,P9$
0400 REM " --- Parameters
0405 DIM P[6],G[4],INFO$[20]
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N0$=F0$(16,2),N1$=F4$,N2$="PR",N3$=F5$,SOURCE$=PGM(-2)
0430 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=PRS01A
0435 FIND (SYS01_DEV,KEY=N0$+N2$+"01",DOM=9800)IOL=PRS01B
0440 DIM INFO$[20]
0442 CALL "SYC.VA","GL",INFO$[ALL]
0443 IF INFO$[20]<>"Y" THEN GOTO 6100
0445 FIND (SYS01_DEV,KEY=N0$+"GL00",DOM=9800)IOL=GLS01A
0450 FOR X=0 TO 4
0455 LET G[X]=NUM(G2$(X*2+1,2),ERR=0460)
0460 NEXT X
0465 LET G[2]=FNYY_YEAR(G2$(5,2))
0470 LET P[0]=NUM(P2$(1,2)),P[1]=NUM(P2$(3,2)),P[3]=NUM(P3$(8,1))
0475 LET P[5]=NUM(P4$(1,2)),P[6]=FNYY_YEAR(P4$(3,2))
0477 LET GL$="N",STATUS=0
0480 CALL "GLC.BA",ERR=0660,SOURCE$,N2$,GLW11$,GL$,STATUS
0483 IF STATUS<>0 THEN GOTO 9900
0485 IF GL$<>"Y" THEN GOTO 4900
0487 LET FILES$[9]="GLM-01",FILES$[10]=GLW11$,OPTIONS$[10]="C"
0490 CALL "SYC.DA",1,9,10,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0493 IF STATUS>0 THEN GOTO 9900
0495 LET GLM01_DEV=CHANNELS[9],GLW11_DEV=CHANNELS[10]
0500 REM " --- Initializations
0510 DIM A[2],X[1],HEADINGS$[3],CHANNELS[3],INFO$[20],INFO[20]
0540 LET PAGE=0,WIDTH=132,HEADINGS=3,ERRORS=0,GLDATE$=P9$(1,3)
0545 LET M0=LEN(M0$),UNITS=0,REF3$=""
0550 LET HEADINGS$[0]=N1$,HEADINGS$[1]=N3$
0555 LET HEADINGS$[2]="Pay Period Ending "+FNB$(GLDATE$)
0560 LET CHANNELS[0]=GLM01_DEV,CHANNELS[1]=GLW11_DEV,CHANNELS[3]=PRM10_DEV
0565 LET INFO[0]=G[4],INFO[1]=NUM(P9$(19,2)),INFO$[2]=P3$(17,1)
0570 LET INFO$[3]=P9$(1,3),INFO$[4]=INFO$[3]
0590 GOSUB 6400; LET INFO$[8]=END$
0700 REM " --- Background
0710 PRINT 'SB',@(28,3),"Check Date:",'SF',
0720 CALL "SYC.WC",1,0,80,0,0,4,0
0800 REM " --- Posting Date
0805 LET V4$="Enter The Expected Date To Be Used For Printing These Checks"
0810 LET V0$="D",V1$="C",V2$=INFO$[4],V3$="",V0=8,V1=40,V2=3
0815 GOSUB 7000
0820 ON V3 GOTO 0825,0800,0800,0800,9900
0825 LET INFO$[4]=V$
0850 REM " --- Correct?
0860 LET V4$="Is The Above Information Correct (Y/N)?"
0865 LET V0$="Y",V1$="CER",V2$="Y",V3$="",V0=1,V2=22,V1=FNV(V4$)
0870 GOSUB 7000
0875 ON V3 GOTO 0880,0850,0850,0850,9900
0880 ON POS(V$="YN") GOTO 0850,0900,0800
0900 REM " --- File Initializations
0910 CALL "SYC.GA",7,1,"","",STATUS
0920 IF STATUS>0 THEN GOTO 9900
0930 CALL "SYC.NB","Sorting",M0,COLUMN
1000 REM " --- Position File
1090 READ (PRE01_DEV,KEY=N0$,DOM=1100)
1100 REM " --- Read next PRE-01 header
1110 LET K$=KEY(PRE01_DEV,END=4000)
1120 IF POS(N0$=K$)<>1 THEN GOTO 4000
1140 READ (PRE01_DEV)IOL=PRE01A
1150 PRINT @(COLUMN,11),FNF$(A0$(3,P[0]),M0$),
1160 IF LEN(K$)>21 THEN GOTO 3900
1200 REM " --- Employee break?
1210 IF A0$(1,11)<>T0$ THEN GOSUB 6000
1500 REM " --- Perform G/L Initializations
1510 LET H0$=A0$,T0=0,T1=0,T2=0,INFO$[0]=FNF$(A0$(3,P[0]),M0$)
1520 LET INFO$[1]=MEMO$,INFO$[5]=A0$,INFO$[6]=S0$
1530 CALL "PRC.GA",0,CHANNELS[ALL],INFO$[ALL],INFO[ALL]
2000 REM " --- Read Payroll detail
2005 REM " --- Earnings
2010 READ (PRE11_DEV,KEY=H0$(1,21),DOM=2020)
2020 LET K11$=KEY(PRE11_DEV,END=2200)
2030 IF POS(H0$(1,21)=K11$)<>1 THEN GOTO 2200
2040 READ (PRE11_DEV)IOL=PRE11A
2050 LET INFO$[5]=A0$
2100 LET INFO$[6]=A0$(29,2),INFO[2]=A[2],INFO[3]=A[1]
2110 DIM Y0$(40)
2120 FIND (PRM10_DEV,KEY=N0$+"A"+A0$(25,2),DOM=2130)IOL=PRM10A
2130 IF POS(Y0$(30,1)="AC")=0 THEN LET INFO[3]=0
2140 CALL "PRC.GA",2,CHANNELS[ALL],INFO$[ALL],INFO[ALL]
2150 LET V0$=A0$(29,2)
2160 GOSUB 5600
2170 GOTO 2020
2200 REM " --- Deductions
2210 READ (PRE21_DEV,KEY=H0$(1,21),DOM=2220)
2220 LET K21$=KEY(PRE21_DEV,END=2400)
2230 IF POS(H0$(1,21)=K21$)<>1 THEN GOTO 2400
2240 READ (PRE21_DEV)IOL=PRE21A
2250 LET INFO$[5]=A0$,INFO$[6]=S0$
2300 LET INFO[2]=A[2],INFO[3]=0,T1=T1+A[2]
2310 CALL "PRC.GA",2,CHANNELS[ALL],INFO$[ALL],INFO[ALL]
2320 GOTO 2220
2400 REM " --- Taxes
2410 READ (PRE31_DEV,KEY=H0$(1,21),DOM=2420)
2420 LET K31$=KEY(PRE31_DEV,END=2700)
2430 IF POS(H0$(1,21)=K31$)<>1 THEN GOTO 2700
2440 READ (PRE31_DEV)IOL=PRE31A
2450 LET INFO$[5]=A0$,INFO$[6]=S0$
2500 LET Q0=A[2],Q2=A[2],Q3=T0,Q7=0
2510 IF Q3=0 THEN LET Q9$=""
2520 IF Q9$="" THEN LET Q9$=B1$(221,2),Q[0]=A[2],Q3=A[2]
2530 FOR Q9=1 TO LEN(Q9$) STEP 2
2540 LET INFO$[6]=Q9$(Q9,2),Q4=0
2550 IF Q3<>0 THEN LET Q4=Q[INT(Q9/2)]*100/Q3
2560 LET V0=Q0*Q4/100,V1=0
2570 IF Q9+2>LEN(Q9$) THEN IF Q7+V0<>Q2 THEN LET V0=Q2-Q7
2580 LET Q7=Q7+V0
2590 LET INFO[2]=V0
2600 CALL "PRC.GA",2,CHANNELS[ALL],INFO$[ALL],INFO[ALL]
2610 IF A0$(22,1)="C" THEN LET T2=T2+V0
2620 NEXT Q9
2630 GOTO 2420
2700 REM " --- Contributions
2710 READ (PRE41_DEV,KEY=H0$(1,21),DOM=2720)
2720 LET K41$=KEY(PRE41_DEV,END=3000)
2730 IF POS(H0$(1,21)=K41$)<>1 THEN GOTO 3000
2740 READ (PRE41_DEV)IOL=PRE41A
2750 LET INFO$[5]=A0$,INFO$[6]=S0$
2800 LET Q0=A[2],Q2=A[2],Q3=T0,Q7=0
2810 IF Q3=0 THEN LET Q9$=""
2820 IF Q9$="" THEN LET Q9$=B1$(221,2),Q[0]=A[2],Q3=A[2]
2830 FOR Q9=1 TO LEN(Q9$) STEP 2
2840 LET Z0$=Q9$(Q9,2),Q4=0
2850 IF Q3<>0 THEN LET Q4=Q[INT(Q9/2)]*100/Q3
2860 LET V0=Q0*Q4/100,V1=0
2870 IF Q9+2>LEN(Q9$) THEN IF Q7+V0<>Q2 THEN LET V0=Q2-Q7
2880 LET Q7=Q7+V0
2890 LET INFO[2]=V0
2900 CALL "PRC.GA",2,CHANNELS[ALL],INFO$[ALL],INFO[ALL]
2910 IF A0$(22,1)="C" THEN LET T2=T2+A[2]
2920 NEXT Q9
2930 GOTO 2720
3000 REM " --- Generate summary posting for check"
3010 LET INFO[2]=(-T0)+T1+T2
3020 CALL "PRC.GA",1,CHANNELS[ALL],INFO$[ALL],INFO[ALL]
3900 REM 
3990 GOTO 1100
4000 REM " --- All Done"
4010 IF GL$<>"Y" THEN GOTO 9900
4080 LET ACTION$="D"
4090 RUN "GLR.XA"
4900 REM " --- G/L Not Installed"
4910 DIM MESSAGE$[1]
4920 LET MESSAGE$[0]="General Ledger Is Required In Order To Run This Report"
4930 LET MESSAGE$[1]="           Press <Enter> To Continue"
4940 CALL "SYC.XA",2,MESSAGE$[ALL],1,22,-1,V$,V3
4990 GOTO 9900
5600 REM " --- Accumulate departments"
5620 LET X=POS(V0$=Q9$)
5630 IF X=0 THEN LET Q9$=Q9$+V0$; GOTO 5620
5640 LET Q[INT(X/2)]=Q[INT(X/2)]+A[2]
5650 LET T0=T0+A[2]
5690 RETURN
6000 REM " --- Employee Break"
6010 DIM B1$(250),Q[20]
6020 LET T0$=A0$(1,11),S0$="  ",MEMO$="Unknown Employee",Q9$=""
6040 FIND (PRM01_DEV,KEY=T0$,DOM=6090)IOL=PRM01A
6050 LET S0$=B1$(221,2),MEMO$=FNP$(B1$(17,14))+" "+FNP$(B1$(1,16))
6090 RETURN
6100 REM " --- No GL Installed"
6110 DIM MESS$[1]
6120 LET MESS$[0]="GL Must Be Installed To Run This Report. <Enter> To Continu
6120:e."
6130 CALL "SYC.XA",2,MESS$[ALL],0,22,-1,V$,V3
6190 GOTO 9900
6400 REM " --- Accrual Date (End Date Of Next Period)
6420 CALL "SYC.PB",N0$,SYS01_DEV,GLDATE$,PERIOD$,YEAR$
6440 LET PERIOD=NUM(PERIOD$)+1,FISC_YR=FNYY_YEAR(YEAR$)
6460 IF PERIOD>G[0] THEN LET PERIOD=1,FISC_YR=FISC_YR+1
6480 CALL "SYC.PA",SYS01_DEV,PERIOD,FISC_YR,BEGIN$,END$,STATUS
6490 RETURN
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8070 DEF FNP$(Q$)=CVS(Q$,2)
8090 DEF FNV(Q$)=42+INT(LEN(Q$)/2)
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABC
8155:DEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF:
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
