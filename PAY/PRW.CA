0010 REM "PRX - W-2 Calculation"
0020 REM "Program PRW.CA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0           |
0026 REM "|      Copyright BASIS International Ltd.                   |
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0050 BEGIN
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open/Lock Files"
0110 LET FILES=8
0120 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0125 LET FILES$[1]="PRM-10",FILES$[2]="PRW-06",FILES$[3]="SYS-01"
0130 LET FILES$[4]="PRM-01",FILES$[5]="PRT-01",FILES$[6]="PRT-11"
0135 LET FILES$[7]="PRT-21",FILES$[8]="PRT-31"
0160 CALL "SYC.DA",1,1,3,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0170 IF STATUS>0 THEN GOTO 9900
0180 LET PRM10_DEV=CHANNELS[1],PRW06_DEV=CHANNELS[2],SYS01_DEV=CHANNELS[3]
0200 REM " --- IOLists"
0210 PRM01A: IOLIST X$,X1$(1)
0220 PRM10C: IOLIST X0$(1)
0230 PRM10W: IOLIST Y0$(1),Y1$(1),Y2$(1),Y3$(1),Y[ALL],Y1[ALL]
0240 PRT01A: IOLIST X$,X[ALL]
0250 PRT11A: IOLIST X$,X[ALL]
0260 PRT21A: IOLIST X$,X[ALL]
0270 PRT31A: IOLIST X$,X[ALL]
0280 PRW06A: IOLIST A0$,A[0]
0290 PRW06A1: IOLIST A0$,A0
0300 PRW06A2: IOLIST A0$,W
0310 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0320 PRS01A: IOLIST P0$,P1$,P2$,P3$,P4$,M0$,M1$,M2$,M3$
0400 REM " --- Parameters"
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N0$=F0$(16,2),N1$=F4$,N2$="PR",N3$=F5$
0430 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=PRS01A
0450 DIM P[4]
0460 LET P[0]=NUM(P2$(1,2)),P[1]=NUM(P4$(1,2)),P[2]=FNYY_YEAR(P4$(3,2)),P[3]=N
0460:UM(P3$(5,1))
0470 LET M0=LEN(M0$)
0500 REM " --- Init Data"
0510 DIM J0$(20,"0"),R8$(9),R9$(9),X1$(30)
0520 LET S=10; REM "Number of codes that can be entered for the Box/Line
0530 DIM Y0$(92),Y1$(S),Y2$(S*2),Y3$(S),Y[S-1],Y1[S-1]
0540 LET C_A$="C",YEAR$=""
0700 REM " --- Background"
0720 FOR X=4 TO 8 STEP 2
0730 CALL "SYC.WC",1,0,80,0,0,X,0
0740 NEXT X
0760 PRINT 'SB',@(31,3),"Quarter:",@(20,5),"Beginning Employee:",@(23,7),"Endi
0760:ng Employee:",'SF','CF',
0800 REM " --- Current Or Archive?"
0805 PRINT 'CF','RB',
0810 LET V0$="S",V1$="CE",V2$=C_A$,V3$="",V4$="Calculate Current Year Or Archi
0810:ved Year (C/A)?",V0=1,V1=FNV(V4$),V2=22
0820 GOSUB 7000
0825 IF V3=4 THEN GOTO 9900
0830 LET C_A$=V$
0840 ON POS(C_A$="AC") GOTO 0800,0850,0900
0850 REM " --- Get Archived Files"
0855 LET V0$="Z",V1$="CER",V2$=YEAR$,V3$="",V4$="Enter The Archived Year To Be
0855: Processed:",V0=4,V1=FNV(V4$),V2=22
0860 GOSUB 7000
0865 IF V3=4 THEN GOTO 9900
0870 IF LEN(V$)<>4 THEN GOTO 0850
0875 IF NUM(V$(3,2),ERR=0850)>P[2] THEN GOTO 0850
0880 LET YEAR$=V$,YR$=YEAR$(3,2)
0890 LET FILES$[4]="PRMA"+YR$+N0$,FILES$[5]="PRT0"+YR$+N0$,FILES$[6]="PRT1"+YR
0890:$+N0$
0895 LET FILES$[7]="PRT2"+YR$+N0$,FILES$[8]="PRT3"+YR$+N0$
0900 REM " --- Open Employee Files"
0910 CALL "SYC.DA",1,4,8,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0915 IF STATUS>0 THEN IF C_A$="A" THEN GOTO 0950 ELSE GOTO 9900
0920 LET PRM01_DEV=CHANNELS[4],PRT01_DEV=CHANNELS[5],PRT11_DEV=CHANNELS[6]
0925 LET PRT21_DEV=CHANNELS[7],PRT31_DEV=CHANNELS[8]
0940 GOTO 1000
0950 REM " --- Can't Open Archive File"
0955 DIM MESSAGE$[1]
0960 LET MESSAGE$[0]="Unable to open "+YEAR$+" archive files."
0965 LET MESSAGE$[1]=" <Enter>=Retry  <F4>=Exit"
0970 CALL "SYC.XA",2,MESSAGE$[ALL],1,22,-1,V$,V3
0980 IF V3=4 THEN GOTO 9900
0990 GOTO 0850
1000 REM " --- Quarter"
1020 LET V0$="S",V1$="E",V2$="",V3$="",V4$="Enter Quarter 1, 2, 3 or 4     <F4
1020:>=Exit",V0=1,V1=40,V2=3
1040 GOSUB 7000
1050 IF V3=4 THEN GOTO 9900
1060 LET P9=NUM(V$,ERR=1000)
1070 IF P9<1 OR P9>4 THEN GOTO 1000
1200 REM " --- Beginning Employee"
1220 LET V0$="M",V1$="KC",V2$=R8$(1,P[0]),V3$=P1$,V4$="<F1>=First, <F3>=Lookup
1220:",V0=9,V1=40,V2=5
1230 GOSUB 7000
1240 ON V3 GOTO 1270,1250,1000,1260,1000
1250 LET V$=J0$(1,9); PRINT @(V1,V2),'CL',"First"; GOTO 1290
1260 CALL "SYC.LP",V$; IF V$="" THEN GOTO 1200
1270 FIND (PRM01_DEV,KEY=N0$+V$,DOM=1200)IOL=PRM01A
1280 PRINT @(V1,V2),'CL',FNF$(V$(1,P[0]),M0$)," ",FNP$(X1$(1,16)),", ",FNP$(X1
1280:$(17,14)),
1290 LET R8$(1)=V$
1300 REM " --- Ending Employee"
1320 LET V0$="M",V1$="KC",V2$=R9$(1,P[0]),V3$=P1$,V4$="<F1>=Last, <F3>=Lookup"
1320:,V0=9,V1=40,V2=7
1330 GOSUB 7000
1340 ON V3 GOTO 1370,1350,1200,1360,1000
1350 LET V$=J0$(1,9); PRINT @(V1,V2),'CL',"Last"; GOTO 1390
1360 CALL "SYC.LP",V$; IF V$="" THEN GOTO 1300
1370 IF V$<R8$ THEN GOTO 1300
1380 FIND (PRM01_DEV,KEY=N0$+V$,DOM=1300)IOL=PRM01A
1385 PRINT @(V1,V2),'CL',FNF$(V$(1,P[0]),M0$)," ",FNP$(X1$(1,16)),", ",FNP$(X1
1385:$(17,14)),
1390 LET R9$(1)=V$
1400 REM " --- Correct?"
1420 LET V0$="Y",V1$="C",V2$="Y",V3$="",V4$="Is The Above Information Correct 
1420:(Y/N)?",V0=1,V1=FNV(V4$),V2=22
1425 GOSUB 7000
1440 IF V3=4 THEN GOTO 9900
1450 ON POS(V$="YN") GOTO 1400,1460,1000
1460 CALL "SYC.NB","Employee",M0+33,COLUMN
1500 REM " --- Remove Old Records For Selected Employees"
1510 READ (PRW06_DEV,KEY=N0$+R8$(1,P[0]),DOM=1520)
1520 LET K3$=KEY(PRW06_DEV,END=1580)
1530 IF K3$(1,2)<>N0$ THEN GOTO 1580
1540 IF NUM(R9$)>0 AND K3$(3,P[0])>R9$(1,P[0]) THEN GOTO 1580
1550 REMOVE (PRW06_DEV,KEY=K3$)
1560 GOTO 1520
1580 REM " --- Init Employee Masterfile PRM-01"
1590 READ (PRM01_DEV,KEY=N0$+R8$(1,P[0]),DOM=1600)
1600 REM " --- Main Loop"
1610 LET K$=KEY(PRM01_DEV,END=4000)
1615 IF K$(1,2)<>N0$ THEN GOTO 4000
1620 READ (PRM01_DEV,KEY=K$)IOL=PRM01A
1625 PRINT @(COLUMN,11),FILL(M0+33),@(COLUMN,11),FNF$(K$(3,P[0]),M0$)," ",FNP$
1625:(X1$(1,16)),", ",FNP$(X1$(17,14)),
1630 IF NUM(R9$)>0 AND K$(3,P[0])>R9$(1,P[0]) THEN GOTO 4000
1640 READ (PRM10_DEV,KEY=N0$+"W",DOM=1650); REM "Init PRM-10 for W2 Box defini
1640:tions
1650 REM " --- W-2 Box Loop"
1660 LET K1$=KEY(PRM10_DEV,END=1600)
1665 IF POS(N0$+"W"=K1$)=0 THEN GOTO 1600
1670 READ (PRM10_DEV,KEY=K1$)IOL=PRM10W; REM "Get PRM-10 W2 Box definitions 
1680 DIM A0$(18),A[1]
1690 LET A0$(1)=K$+Y0$(4,3)+Y0$(89,4)
1700 FOR J=1 TO S
1705 IF POS(" "<>Y1$(J))=0 THEN EXITTO 1800
1710 GOSUB 6000; IF X$="" THEN GOTO 1795
1720 LET N=1,N1=0,W=0,W1=0
1725 IF Y1$(J,1)<>"C" THEN GOTO 1755
1730 DIM X0$(60)
1735 READ (PRM10_DEV,KEY=N0$+"C"+Y2$(J*2-1,2),DOM=1740)IOL=PRM10C; REM "Get PR
1735:M-10 Tax Code definition
1740 IF X0$(44,1)="S" THEN LET A0$(15,2)=Y0$(89,2); IF A0$(15,2)="  " THEN LET
1740: A0$(15,2)=X0$(4,2)
1750 IF X0$(44,1)="L" THEN LET A0$(17,2)=Y0$(91,2); IF A0$(17,2)="  " THEN LET
1750: A0$(17,2)=X0$(4,2)
1755 IF Y[J-1]>2 THEN LET N1=12 ELSE IF Y[J-1]>1 THEN LET N1=6
1760 IF Y3$(J,1)="-" THEN LET N=-1
1765 IF P9=1 THEN LET W1=W[1+N1]; GOTO 1780
1770 FOR L=1 TO P9
1775 LET W1=W1+W[L+N1]
1778 NEXT L
1780 LET W=W+W1*N; REM "Operator '+-'
1782 IF Y1[J-1]<=0 THEN LET Y1[J-1]=1; REM "Multiplier must be positive
1785 LET W=W*Y1[J-1]; REM "Invoke Multiplier"
1790 IF A0$(15,4)<>"    " AND W>0 THEN WRITE (PRW06_DEV,KEY=A0$)IOL=PRW06A2
1793 LET A[0]=A[0]+W
1795 NEXT J
1800 REM " --- Write Employees W2 Box Record"
1830 IF A[0]>0 THEN WRITE (PRW06_DEV,KEY=A0$)IOL=PRW06A; GOTO 1890
1840 IF A[0]=0 THEN GOTO 1890
1850 LET A0=0; READ (PRW06_DEV,KEY=A0$,DOM=1855)IOL=PRW06A1; GOTO 1860
1855 LET K2$=KEY(PRW06_DEV,END=1860); IF POS(A0$(1,6)=K2$)=1 THEN READ (PRW06_
1855:DEV,KEY=K2$)IOL=PRW06A1
1860 LET A0=A0+A[0]; REM "Apply deductions to state code if needed
1870 IF A0<0 THEN GOTO 1890
1880 WRITE (PRW06_DEV,KEY=A0$)IOL=PRW06A1
1890 READ (PRM10_DEV,KEY=K1$)
1900 GOTO 1650
4000 REM " --- Calculation Complete"
4010 LET V0$="S",V1$="CE",V2$="",V3$="",V4$="Calculation Process Complete (<En
4010:ter>=Continue)",V0=1,V1=FNV(V4$),V2=22
4020 GOSUB 7000
4040 GOTO 9900
6000 REM " --- Get Employee Detail History"
6005 LET X$=""; DIM W[19]
6010 ON POS(Y1$(J,1)="ABCD") GOTO 6090,6015,6030,6045,6060
6015 LET NBR=16; DIM X[NBR]
6020 READ (PRT01_DEV,KEY=K$+"A"+Y2$(J*2-1,2),DOM=6090)IOL=PRT01A
6025 GOTO 6070
6030 LET NBR=7; DIM X[NBR]
6035 READ (PRT11_DEV,KEY=K$+"B"+Y2$(J*2-1,2),DOM=6090)IOL=PRT11A
6040 GOTO 6070
6045 LET NBR=18; DIM X[NBR]
6050 READ (PRT21_DEV,KEY=K$+"C"+Y2$(J*2-1,2),DOM=6090)IOL=PRT21A
6055 GOTO 6070
6060 LET NBR=19; DIM X[NBR]
6065 READ (PRT31_DEV,KEY=K$+"D"+Y2$(J*2-1,2),DOM=6090)IOL=PRT31A
6070 FOR I=0 TO NBR
6075 LET W[I]=X[I]
6080 NEXT I
6090 RETURN
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8070 DEF FNV(Q$)=42+INT(LEN(Q$)/2)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABC
8155:DEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF:
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
