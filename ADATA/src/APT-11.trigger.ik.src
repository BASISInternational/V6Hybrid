rem AddonSoftware
rem Copyright BASIS International Ltd.
rem 
rem instead of key
rem This trigger assumes that it is being used in a non-modified Barista and Addon
rem Version 6 environment. If there have been any modifications to these systems,
rem be sure to thoroughly examine this trigger and test changes.

rem --- Get key from Barista Addon's apt_invoicedet instead of V6 apt-11

	setopts $080872202c2e$
	seterr trigger_error

    info!=BBjAPI().getCurrentSessionInfo()
    grpID$=str(info!.getGroupID())   
    sessionID$=str(info!.getSessionID())
    nskey$="APT11"+"_"+grpID$+"_"+sessionID$

    rem ' trace
    goto skip_trace;rem this line (and change pathname as applicable) to do the trace
    tfl$="C:/temp_downloads/apt11.ik."+grpID$+"_"+sessionID$+"_"+str(fpt(tim))+".txt"
    erase tfl$,err=*next
    string tfl$
    tfl=unt
    open(tfl)tfl$
    settrace(tfl,MODE="UNTIMED")
skip_trace:
	
rem ---  Get the Trigger object from the BBj File System

    td! = BBjAPI().getFileSystem().getTriggerData()
	
	wkdir$ = dir("")
	apdir$ = stbl("+APDATA")

rem --- get key (stored in instead-of-read trigger) from namespace
    gns!=BBjAPI().getGroupNamespace()
    have_key=0
    ky$ = gns!.getValue(nskey$,err=*next);have_key=1

    if ky$=nskey$+"**EOF"
        err_num=2
        goto trigger_error_forced
    else
        if have_key=0
            rem --- Open Barista AP Invoice Detail table and get first key
            apt_invoicedet=unt
            open (apt_invoicedet,err=trigger_error)apdir$+"apt-11"
            ky$=key(apt_invoicedet,err=trigger_error)
            gns!.setValue(nskey$,ky$)
        else
            rem --- We already have the next key saved in the namespace - check to see if we're doing a KEYP and if so, need to wind back to previous key instead
            if td!.getKeyCallType()="KEYP"
            	apt_invoicedet=unt
                open (apt_invoicedet,err=trigger_error)apdir$+"apt-11"
                ky$=ky$(1,20)+str(num(ky$(21,2)):"000");rem --- seq# needs to be 3 char for Barista Addon
                read (apt_invoicedet,key=ky$,dir=0);rem --- set pointer to where key in the namespace left us (after DOM on key+$FF$ in read)
                ky$=keyp(apt_invoicedet,err=trigger_error);rem --- then get previous key and send it back to calling program so it can determine sequence#

                dim seq$(2)
                seq$(1,2)=str(num(ky$(21,3)):"00")
                ky$=ky$(1,20)+seq$
                gns!.setValue(nskey$,ky$)

                else
                    err_num=2
                    goto trigger_error_forced
                endif
            endif
        endif
        td!.setReadBuffer(ky$)
        goto std_exit
    endif

trigger_error:

    rd_err_text$="", err_num=err
    
trigger_error_forced:

    if tcb(2)=0 and tcb(5) then rd_err_text$=pgm(tcb(5),tcb(13),err=*next)
    throw "["+pgm(-2)+"] "+str(tcb(5))+": "+rd_err_text$,err_num
	
rem --- Functions

	rem --- fnyy$ returns a 2 character year (A0-E9) from a 4 character year
	def fnyy$(q1$)
		q3$=" ABCDE56789ABCDEFGHIJ"
		q1$(1,1)=q3$(pos(q1$(1,1)=" 0123456789ABCDEFGHIJ"))
		return q1$
	fnend

	rem --- returns a 3 character packed date from an 8 character year/month/day
	def fnd$(q$)
		q$=pad(q$,8)
		if cvs(q$,2)="" return "   "
		q1$=chr(num(q$(5,2))+32)+chr(num(q$(7,2))+32)
		if q$(1,2)="19"
			q2$=chr(num(q$(3,2))+32)
		else
			q2$=chr(num(q$(3,2))+132)
		endif
		return q2$+q1$
	fnend
	
std_exit: