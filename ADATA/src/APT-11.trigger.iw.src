rem AddonSoftware
rem Copyright BASIS International Ltd.
rem 
rem instead of write
rem This trigger assumes that it is being used in a non-modified Barista and Addon
rem Version 6 environment. If there have been any modifications to these systems,
rem be sure to thoroughly examine this trigger and test changes.

rem --- Write Barista Addon's apt_invoicedet instead of V6 apt-11

	setopts $080872202c2e$
	seterr trigger_error

    info!=BBjAPI().getCurrentSessionInfo()
    grpID$=str(info!.getGroupID())   
    sessionID$=str(info!.getSessionID())
    nskey$="APT11"+"_"+grpID$+"_"+sessionID$

    rem ' trace
    goto skip_trace;rem this out to do the trace
    tfl$="C:/temp_downloads/apt11.iw."+grpID$+"_"+sessionID$+"_"+str(fpt(tim))+".txt"
    erase tfl$,err=*next
    string tfl$
    tfl=unt
    open(tfl)tfl$
    settrace(tfl,MODE="UNTIMED")
skip_trace:
	
rem ---  Get the Trigger object from the BBj File System

    td! = BBjAPI().getFileSystem().getTriggerData()

    ky$=td!.getKey()
    
	wkdir$ = dir("")
	apdir$ = stbl("+APDATA")

rem --- Template for the APT-11 record being caught

    intemp$="firm_id:c(2),ap_type:c(2),vendor_nbr:c(6),ap_inv_nbr:c(10),sequence_num:c(2*),"
    intemp$=intemp$+"trans_type:c(1),trans_date:c(3),trans_ref:c(7*),trans_amt:n(7*),trans_disc:n(7*),trans_ret:n(7*)"

	dim inRec$:intemp$
    inRec$=td!.getWriteBuffer()

rem --- Open Barista AP Invoice Detail table

	apt_invoicedet=unt
	open (apt_invoicedet,err=trigger_error)apdir$+"apt-11"
	tpl_dev=unt
	open (tpl_dev,err=trigger_error) wkdir$+"sys/data/ddm_table_tpls.dat"
	read (tpl_dev,key=pad("apt_invoicedet",16),dom=trigger_error) *,*,apt_invoicedet_tpl$
	dim apt_invoicedet$:apt_invoicedet_tpl$
	
rem --- Write the data

    apt_invoicedet.firm_id$=inRec.firm_id$
    apt_invoicedet.ap_type$=inRec.ap_type$
    apt_invoicedet.vendor_id$=inRec.vendor_nbr$
    apt_invoicedet.ap_inv_no$=inRec.ap_inv_nbr$
    apt_invoicedet.sequence_no$=inRec.sequence_num$
    apt_invoicedet.trans_type$=inRec.trans_type$
    value$=inRec.trans_date$
    gosub fix_yymmdd_date    
    apt_invoicedet.trans_date$=value$
    apt_invoicedet.trans_ref$=inRec.trans_ref$
    apt_invoicedet.trans_amt$=inRec.trans_amt$
    apt_invoicedet.trans_disc$=inRec.trans_disc$
    apt_invoicedet.trans_ret$=inRec.trans_ret$
    
    apt_invoicedet$=field(apt_invoicedet$)
    writerecord (apt_invoicedet)apt_invoicedet$

	goto std_exit

fix_yymmdd_date: rem --- Convert yy dates to yyyy, and yymmdd dates to yyyymmdd
    rem ---     Input/Out: value$
    if len(cvs(value$,3)) then
        value$=fnyy_yy21$(value$)
        if asc(value$)>=65 then
            value$=str(200+asc(value$)-65)+value$(2)
        else
            value$="19"+value$
        endif
        value$=str(num(value$(1,4),err=*next))+value$(5)
    else
        value$=pad("",8)
    endif
    return

trigger_error:

    rd_err_text$="", err_num=err
    if tcb(2)=0 and tcb(5) then rd_err_text$=pgm(tcb(5),tcb(13),err=*next)
    if err_num=11
        rem -- if we took the DOM above, store the partial key in group namespace for upcoming k$=key in calling code
        gns!=BBjAPI().getGroupNamespace()
        gns!.setValue(nskey$,ky$)
	endif
    throw "["+pgm(-2)+"] "+str(tcb(5))+": "+rd_err_text$,err_num
	
rem --- Functions

	rem --- fnyy$ returns a 2 character year (A0-E9) from a 4 character year
	def fnyy$(q1$)
		q3$=" ABCDE56789ABCDEFGHIJ"
		q1$(1,1)=q3$(pos(q1$(1,1)=" 0123456789ABCDEFGHIJ"))
		return q1$
	fnend

    rem --- FNYEAR_YY21$ Convert Numeric Year to 21st Century 2-Char Year"   
    def FNYEAR_YY21$(Q)=FNYY_YY21$(STR(MOD(Q,100):"00"))
   
    rem --- FNYY_YY21$ Convert 2-Char Year to 21st Century 2-Char Year
	def FNYY_YY21$(Q1$)
	Q3$=" ABCDE56789ABCDEFGHIJ",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
	return Q1$
	fnend

	rem --- returns a 3 character packed date from an 8 character year/month/day
	def fnd$(q$)
		q$=pad(q$,8)
		if cvs(q$,2)="" return "   "
		q1$=chr(num(q$(5,2))+32)+chr(num(q$(7,2))+32)
		if q$(1,2)="19"
			q2$=chr(num(q$(3,2))+32)
		else
			q2$=chr(num(q$(3,2))+132)
		endif
		return q2$+q1$
	fnend
	
std_exit: