rem AddonSoftware
rem Copyright BASIS International Ltd.
rem 
rem instead of write
rem This trigger assumes that it is being used in a non-modified Barista and Addon
rem Version 6 environment. If there have been any modifications to these systems,
rem be sure to thoroughly examine this trigger and test changes.

rem --- Write Barista Addon's apm_vendhist instead of V6 apm-02

	setopts $080872202c2e$
	seterr trigger_error

    info!=BBjAPI().getCurrentSessionInfo()
    grpID$=str(info!.getGroupID())   
    sessionID$=str(info!.getSessionID())
    nskey$="APM02"+"_"+grpID$+"_"+sessionID$

    rem ' trace
    goto skip_trace;rem this out to do the trace
    tfl$="C:/temp_downloads/apm02.iw."+grpID$+"_"+sessionID$+"_"+str(fpt(tim))+".txt"
    erase tfl$,err=*next
    string tfl$
    tfl=unt
    open(tfl)tfl$
    settrace(tfl,MODE="UNTIMED")
skip_trace:
	
rem ---  Get the Trigger object from the BBj File System

    td! = BBjAPI().getFileSystem().getTriggerData()

    ky$=td!.getKey()
    
	wkdir$ = dir("")
	apdir$ = stbl("+APDATA")

rem --- Template for the APM-02 record being caught

    intemp$="firm_id:c(2),vendor_nbr:c(6),ap_type:c(2*=10),dist_code:c(2),payment_grp:c(2),terms_code:c(2),"
    intemp$=intemp$+"lstinv_date:c(3),lstpay_date:c(3),reserved_str:c(12*=10),gl_account:c(10*=10),"
    intemp$=intemp$+"open_invs:n(7*=10),open_ret:n(7*=10),ytd_purch:n(7*=10),pyr_purch:n(7*=10),nyr_purch:n(7*=10),"
    intemp$=intemp$+"ytd_discs:n(7*=10),pri_yr_discs:n(7*=10),nyr_disc:n(7*=10),ytd_payments:n(7*=10),pyr_payments:n(7*=10),"
    intemp$=intemp$+"nyr_payments:n(7*=10),cur_cal_pmts:n(7*=10),pri_cal_pmt:n(7*=10),nxt_cyr_pmts:n(7*=10)"

	dim inRec$:intemp$
    inRec$=td!.getWriteBuffer()

rem --- Open Barista Vendor Codes and History table

	apm_vendhist=unt
	open (apm_vendhist,err=trigger_error)apdir$+"apm-02"
	tpl_dev=unt
	open (tpl_dev,err=trigger_error) wkdir$+"sys/data/ddm_table_tpls.dat"
	read (tpl_dev,key=pad("APM_VENDHIST",16),dom=trigger_error) *,*,apm_vendhist_tpl$
	dim apm_vendhist$:apm_vendhist_tpl$; rem --- Template for the APM-12 record being caught
	
rem --- Write the data

    apm_vendhist.firm_id$=inRec.firm_id$
    apm_vendhist.vendor_id$=inRec.vendor_nbr$
    apm_vendhist.ap_type$=inRec.ap_type$
    apm_vendhist.ap_dist_code$=inRec.dist_code$
    apm_vendhist.payment_grp$=inRec.payment_grp
    apm_vendhist.ap_terms_code$=inRec.terms_code$
    value$=inRec.lstinv_date$
    gosub fix_yymmdd_date
    apm_vendhist.lstinv_date$=value$
    value$=inRec.lstpay_date$
    gosub fix_yymmdd_date    
    apm_vendhist.lstpay_date$=value$
    apm_vendhist.gl_account$=inRec.gl_account$
    apm_vendhist.open_invs=inRec.open_invs
    apm_vendhist.open_ret=inRec.open_ret
    apm_vendhist.ytd_purch=inRec.ytd_purch
    apm_vendhist.pyr_purch=inRec.pyr_purch
    apm_vendhist.nyr_purch=inRec.nyr_purch
    apm_vendhist.ytd_discs=inRec.ytd_discs
    apm_vendhist.pri_yr_discs=inRec.pri_yr_discs
    apm_vendhist.nyr_disc=inRec.nyr_disc
    apm_vendhist.ytd_payments=inRec.ytd_payments
    apm_vendhist.pyr_payments=inRec.pyr_payments
    apm_vendhist.nyr_payments=inRec.nyr_payments
    apm_vendhist.cur_cal_pmts=inRec.cur_cal_pmts
    apm_vendhist.pri_cal_pmt=inRec.pri_cal_pmt
    apm_vendhist.nxt_cyr_pmts=inRec.nxt_cyr_pmts
    
    apm_vendhist$=field(apm_vendhist$)
    writerecord (apm_vendhist)apm_vendhist$

	goto std_exit

fix_yymmdd_date: rem --- Convert yy dates to yyyy, and yymmdd dates to yyyymmdd
    rem ---     Input/Out: value$
    if len(cvs(value$,3)) then
        value$=fnyy_yy21$(value$)
        if asc(value$)>=65 then
            value$=str(200+asc(value$)-65)+value$(2)
        else
            value$="19"+value$
        endif
        value$=str(num(value$(1,4),err=*next))+value$(5)
    else
        value$=pad("",8)
    endif
    return

trigger_error:

    rd_err_text$="", err_num=err
    if tcb(2)=0 and tcb(5) then rd_err_text$=pgm(tcb(5),tcb(13),err=*next)
    if err_num=11
        rem -- if we took the DOM above, store the partial key in group namespace for upcoming k$=key in calling code
        gns!=BBjAPI().getGroupNamespace()
        gns!.setValue(nskey$,ky$)
	endif
    throw "["+pgm(-2)+"] "+str(tcb(5))+": "+rd_err_text$,err_num
	
rem --- Functions

	rem --- fnyy$ returns a 2 character year (A0-E9) from a 4 character year
	def fnyy$(q1$)
		q3$=" ABCDE56789ABCDEFGHIJ"
		q1$(1,1)=q3$(pos(q1$(1,1)=" 0123456789ABCDEFGHIJ"))
		return q1$
	fnend

    rem --- FNYEAR_YY21$ Convert Numeric Year to 21st Century 2-Char Year"   
    def FNYEAR_YY21$(Q)=FNYY_YY21$(STR(MOD(Q,100):"00"))
   
    rem --- FNYY_YY21$ Convert 2-Char Year to 21st Century 2-Char Year
	def FNYY_YY21$(Q1$)
	Q3$=" ABCDE56789ABCDEFGHIJ",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
	return Q1$
	fnend

	rem --- returns a 3 character packed date from an 8 character year/month/day
	def fnd$(q$)
		q$=pad(q$,8)
		if cvs(q$,2)="" return "   "
		q1$=chr(num(q$(5,2))+32)+chr(num(q$(7,2))+32)
		if q$(1,2)="19"
			q2$=chr(num(q$(3,2))+32)
		else
			q2$=chr(num(q$(3,2))+132)
		endif
		return q2$+q1$
	fnend
	
std_exit: