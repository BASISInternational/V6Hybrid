0010 REM "PRR - Check Register (G/L Summary)"
0020 REM "Program PRR.HB"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.7 - 01Jul00 |"
0026 REM "|         Copyright (c) 1997 ADD+ON Software Inc.           |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "11May00 WGH: Don't run GL Recap Report unless posting to GL (4080)
0032 REM "09May01 KJS: Calculate accrual taxes the same way as PRU.CB (m570,a1
0032:195)
0040 REM 
0085 SETESC 9000
0090 SETERR 9000
0200 REM " --- IOLIST's"
0210 PRE01A: IOLIST A0$
0220 PRE11A: IOLIST A0$,A[ALL]
0230 PRE21A: IOLIST A0$,A[ALL]
0240 PRE31A: IOLIST A0$,A[ALL]
0250 PRE41A: IOLIST A0$,A[ALL]
0260 PRM01A: IOLIST B0$,B1$
0270 PRM10A: IOLIST Y0$(1)
0280 PRM10E: IOLIST Z0$,Z1$,Z2$,Z3$,Z4$,Z5$,Z6$,Z7$,Z8$
0290 PRW01A: IOLIST C0$
0400 REM " --- Parameters
0405 DIM GLCONTROL$(640)
0410 IF GL$<>"Y" THEN GOTO 4000
0415 LET GLCONTROL$(1)=STBL("!GLCONTROL",ERR=4000)
0420 IF GLCONTROL$(50,1)<>"Y" THEN GOTO 4000
0500 REM " --- Initializations
0510 DIM A[2],X[1],CHANNELS[3],INFO$[20],INFO[20]
0545 LET M0=LEN(M0$)
0565 LET INFO[0]=G[4],INFO[1]=NUM(P9$(19,2)),INFO$[2]=P3$(17,1)
0570 LET INFO$[3]=GLDATE$(1,3),INFO$[4]=CHKDATE$,INFO[4]=NUM(P3$(7,1))
0580 LET CHANNELS[0]=GLM01_DEV,CHANNELS[1]=GLW11_DEV,CHANNELS[3]=PRM10_DEV
0590 GOSUB 6400; LET INFO$[8]=END$
0700 REM " --- Background
0710 PRINT @(0,10),'CL',@(0,11),'CL',@(0,12),'CL',
0720 CALL "SYC.NB","Sorting",M0,COLUMN
1000 REM " --- Position File
1090 READ (PRW01_DEV,KEY=N0$,DOM=1100)
1100 REM " --- Read next PRE-01 header
1110 LET K$=KEY(PRW01_DEV,END=4000)
1120 IF POS(N0$=K$)<>1 THEN GOTO 4000
1130 READ (PRW01_DEV)IOL=PRW01A
1140 PRINT @(COLUMN,11),C0$(3,7),
1145 IF C0$(10,1)="V" THEN GOTO 3900
1150 LET A0$(1)=N0$+C0$(14,9)+C0$(10,1)+C0$(23,2)+C0$(3,7)
1160 IF C0$(10,1)="C" THEN LET A0$(15)=""
1190 READ (PRE01_DEV,KEY=A0$(1,21),DOM=3900)IOL=PRE01A
1195 LET INFO$[7]=A0$(25,1)
1200 REM " --- Employee break?
1210 IF A0$(1,11)<>T0$ THEN GOSUB 6000
1500 REM " --- Perform G/L Initialization
1510 LET SAVEA0$=A0$,T0=0,T1=0,T2=0,INFO$[0]=FNF$(A0$(3,P[0]),M0$)
1520 LET INFO$[1]=MEMO$,INFO$[4]=C0$(11,3),INFO$[5]=A0$,INFO$[6]=S0$
1590 CALL "PRC.GA",0,CHANNELS[ALL],INFO$[ALL],INFO[ALL]
2000 REM " --- Read next Entry detail
2010 REM " --- Earnings
2020 READ_PRE11:
2030 READ (PRE11_DEV,KEY=SAVEA0$(1,21),DOM=NEXT_PRE11)
2040 NEXT_PRE11:
2050 LET K$=KEY(PRE11_DEV,END=READ_PRE21)
2060 IF POS(SAVEA0$(1,21)=K$)<>1 THEN GOTO READ_PRE21
2070 READ (PRE11_DEV)IOL=PRE11A
2080 LET INFO$[5]=A0$,INFO$[6]=S0$
2100 LET INFO$[6]=A0$(29,2),INFO[2]=A[2],INFO[3]=A[1]
2110 DIM Y0$(40)
2120 FIND (PRM10_DEV,KEY=N0$+"A"+A0$(25,2),DOM=2130)IOL=PRM10A
2130 IF POS(Y0$(30,1)="AC")=0 THEN LET INFO[3]=0
2140 CALL "PRC.GA",2,CHANNELS[ALL],INFO$[ALL],INFO[ALL]
2150 LET V0$=A0$(29,2)
2160 GOSUB 5600
2190 GOTO NEXT_PRE11
2300 REM " --- Deductions
2310 READ_PRE21:
2320 READ (PRE21_DEV,KEY=SAVEA0$(1,21),DOM=NEXT_PRE21)
2330 NEXT_PRE21:
2340 LET K$=KEY(PRE21_DEV,END=READ_PRE31)
2350 IF POS(SAVEA0$(1,21)=K$)<>1 THEN GOTO READ_PRE31
2360 READ (PRE21_DEV)IOL=PRE21A
2370 LET INFO$[5]=A0$,INFO$[6]=S0$
2410 LET INFO[2]=A[2],INFO[3]=0,T1=T1+A[2]
2420 CALL "PRC.GA",2,CHANNELS[ALL],INFO$[ALL],INFO[ALL]
2490 GOTO NEXT_PRE21
2500 REM " --- Taxes
2510 READ_PRE31:
2520 READ (PRE31_DEV,KEY=SAVEA0$(1,21),DOM=NEXT_PRE31)
2530 NEXT_PRE31:
2540 LET K$=KEY(PRE31_DEV,END=READ_PRE41)
2550 IF POS(SAVEA0$(1,21)=K$)<>1 THEN GOTO READ_PRE41
2560 READ (PRE31_DEV)IOL=PRE31A
2570 LET INFO$[5]=A0$,INFO$[6]=S0$
2580 GOSUB CALCULATE
2595 GOTO NEXT_PRE31
2700 REM " --- Contributions
2710 READ_PRE41:
2720 READ (PRE41_DEV,KEY=SAVEA0$(1,21),DOM=NEXT_PRE41)
2730 NEXT_PRE41:
2740 LET K$=KEY(PRE41_DEV,END=GEN_SUMMARY)
2750 IF POS(SAVEA0$(1,21)=K$)<>1 THEN GOTO GEN_SUMMARY
2760 READ (PRE41_DEV)IOL=PRE41A
2770 LET INFO$[5]=A0$,INFO$[6]=S0$
2780 GOSUB CALCULATE
2795 GOTO NEXT_PRE41
3000 REM " --- Generate summary posting for check
3005 GEN_SUMMARY:
3010 LET INFO[2]=(-T0)+T1+T2
3020 CALL "PRC.GA",1,CHANNELS[ALL],INFO$[ALL],INFO[ALL]
3900 REM 
3990 GOTO 1100
4000 REM " --- All Done
4080 IF GL$="Y" THEN RUN "GLR.XA"
4090 RUN UPDATE$,ERR=9900
5600 REM " --- Accumulate departments
5620 LET X=POS(V0$=Q9$)
5630 IF X=0 THEN LET Q9$=Q9$+V0$; GOTO 5620
5640 LET Q[INT(X/2)]=Q[INT(X/2)]+A[2]
5650 LET T0=T0+A[2]
5690 RETURN
6000 REM " --- Employee Break
6010 DIM B1$(250),Q[20]
6020 LET T0$=A0$(1,11),S0$="  ",MEMO$="Unknown Employee",Q9$=""
6040 FIND (PRM01_DEV,KEY=T0$,DOM=6090)IOL=PRM01A
6050 LET S0$=B1$(221,2),MEMO$=FNP$(B1$(17,14))+" "+FNP$(B1$(1,16))
6090 RETURN
6400 REM " --- Get Accrual Date (End Date Of Next Period)
6420 CALL "SYC.PB",N0$,SYS01_DEV,GLDATE$,PERIOD$,YEAR$
6440 LET PERIOD=NUM(PERIOD$)+1,FISC_YR=FNYY_YEAR(YEAR$)
6460 IF PERIOD>G[0] THEN LET PERIOD=1,FISC_YR=FISC_YR+1
6480 CALL "SYC.PA",SYS01_DEV,PERIOD,FISC_YR,BEGIN$,END$,STATUS
6490 RETURN
6600 REM " --- Calculate Taxes & Contributions
6605 CALCULATE:
6607 LET INFO$[5]=A0$,INFO$[6]=S0$
6610 LET Q0=A[2],Q2=A[2],Q3=T0,Q7=0
6620 IF Q3=0 THEN LET Q9$=""
6630 IF Q9$="" THEN LET Q9$=B1$(221,2),Q[0]=A[2],Q3=A[2]
6640 FOR Q9=1 TO LEN(Q9$) STEP 2
6650 LET INFO$[6]=Q9$(Q9,2),Q4=0
6660 IF Q3<>0 THEN LET Q4=Q[INT(Q9/2)]*100/Q3
6670 LET V0=Q0*Q4/100,V1=0
6680 IF Q9+2>LEN(Q9$) THEN IF Q7+V0<>Q2 THEN LET V0=Q2-Q7
6690 LET Q7=Q7+V0
6710 LET INFO[2]=V0
6720 CALL "PRC.GA",2,CHANNELS[ALL],INFO$[ALL],INFO[ALL]
6750 IF A0$(22,1)="C" THEN LET T2=T2+V0
6790 NEXT Q9
6890 RETURN
8000 REM " --- Functions
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8070 DEF FNP$(Q$)=CVS(Q$,2)
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABC
8155:DEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF:
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
