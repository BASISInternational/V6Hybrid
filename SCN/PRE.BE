0010 REM "PRE - Payroll Entry - Contribution Information"
0020 REM "Program PRE.BE"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.7           |
0026 REM "|         Copyright BASIS International Ltd.                   |
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "03May00 KJS: Prevent error 47/6960 (240,510,5010,5020,5040)
0040 REM 
0050 PRECISION P[3]
0085 SETESC 9000
0090 SETERR 9000
0200 REM " --- Iolists"
0210 PRE31A: IOLIST V$,X,*,Y
0220 PRE41A: IOLIST W0$,W[ALL]
0240 PRT31A: IOLIST Y0$(1),Y[ALL],Z[0],Z[1]
0260 PRM10D: IOLIST X0$,X[ALL],X1$,X2$
0500 REM " --- Init Data
0510 DIM W0$(32),W[2],Y[17],Z[2],X[2],U[2],Y0$(19)
0520 LET W0$(1)=A0$(1,21)+"D"
0700 REM " --- Background"
0710 PRINT @(0,L0),'CE',
0715 CALL "SYC.WC",1,0,80,0,0,9,0
0720 PRINT 'SB',@(4,9),"Contributions",@(0,L0),"Seq",@(4),"Contribution Code",
0720:@(17+M1),"Basis",@(18+M1+M3),"Rate",@(16+2*M1+M3),"Amount",
0800 REM " --- Options
0900 IF CONTRIB$<>"DONE" THEN LET U0=1,T3=0,CONTRIB$="DONE" ELSE LET U0=0
0920 GOSUB 5100
0940 LET U0=0
1000 REM " --- Overflow
1020 IF L>L9 THEN PRINT @(0,22),'CL',@(0,L1),'LD',
1040 IF L>L9 THEN LET L=L9
1100 REM " --- Get Next Key
1110 DIM U[2]
1120 LET K$=KEY(PRE41_DEV,END=1300)
1140 IF K$(1,22)<>W0$(1,22) THEN GOTO 1300
1150 READ (PRE41_DEV)IOL=PRE41A
1160 GOTO 1490
1300 LET W0=NUM(W0$(23,2))+1
1320 IF W0>99 THEN LET W0=1
1340 LET W0$(23,2)=STR(W0:"00")
1350 PRINT @(0,L),W0$(23,2),
1390 GOTO 1480
1400 REM " --- Seq
1420 LET V0$="Z",V1$="KER",V2$=W0$(23,2),V3$="",V4$="",V0=2,V1=0,V2=L,I0=0
1430 GOSUB 7000
1440 IF V3=4 THEN GOTO 4000
1450 IF V$="00" THEN GOTO 1400
1460 LET W0$(23,2)=V$
1480 FIND (PRE41_DEV,KEY=W0$(1,24),DOM=1600)IOL=PRE41A
1490 IF W0$(1,24)<=K9$ THEN GOSUB 5400
1500 GOSUB 5000
1510 LET U[1]=-W[1],U[2]=-W[2]
1520 LET I0=5
1530 IF W[2]=0 THEN GOTO 2000
1590 GOTO 3300
1600 REM " --- Setup
1620 DIM W[2],U[2]
1630 LET W0$(25)=""
2000 REM " --- Contrib Code
2020 LET V0$="S",V1$="KCRE",V2$=W0$(25,2),V3$="",V0=2,V1=4,V2=L,I0=1,V4$="Ente
2020:r A Valid Contribution Code (<F3>=Lookup)"
2030 GOSUB 7000
2031 IF V3=2 THEN GOTO 1400
2032 IF V3<>3 THEN GOTO 2040
2034 LET V4=1,V6=4,V7=2,V8=6,V9=16,V5$="D"
2036 CALL "SYC.LZ",V1,V2,V4,PRM10_DEV,V6,V7,V8,V9,V$,V5$,N0$
2038 IF V$="" THEN GOTO 2000
2040 LET W0$(25,2)=V$
2042 IF V3=4 THEN GOTO 4000
2050 FIND (PRT31_DEV,KEY=A0$(1,11)+"D"+W0$(25,2),DOM=2000)IOL=PRT31A
2060 FIND (PRM10_DEV,KEY=N0$+"D"+W0$(25,2),DOM=2000)IOL=PRM10D
2070 LET T=NUM(X0$(31,2))
2080 PRINT @(7,L),X0$(6,16),
2200 REM " --- Calculate
2220 GOSUB 6500
2240 GOSUB 6700
2280 PRINT @(24,L),W[0]:M1$,W[1]:M3$,W[2]:M1$,
2290 GOTO 3200
2300 REM " --- Rate
2310 IF X0$(24,1)="F" THEN GOTO 2390
2320 LET V0$="N",V2$=STR(W[1]),V3$=M3$,V4$="",V1=24+M1,V2=L
2340 GOSUB 7000
2360 LET W[1]=V
2370 GOSUB 6640
2380 PRINT @(24+M1+M3,L),W[2]:M1$,
2390 GOTO 3200
2600 REM " --- Amount
2610 PRECISION 2; LET W[2]=W[2]*1; PRECISION P[3]
2620 LET V0$="N",V2$=STR(W[2]),V3$=M1$,V4$="",V1=24+M1+M3,V2=L
2640 GOSUB 7000
2660 LET W[2]=V
2690 GOTO 3200
2700 REM " --- Basis
2710 IF X0$(24,1)="F" THEN GOTO 2790
2720 LET V0$="N",V2$=STR(W[0]),V3$=M1$,V4$="",V1=24,V2=L
2740 GOSUB 7000
2760 LET W[0]=V
2770 GOSUB 6640
2780 PRINT @(24+M1+M3,L),W[2]:M1$,
2790 GOTO 3200
3200 REM " --- Seq Control
3210 IF V3=4 THEN IF I0>1 THEN GOTO 3300
3220 IF V3<>2 THEN GOTO 3250
3230 IF I0>0 THEN LET I0=I0-1
3240 GOTO 3260
3250 LET I0=I0+1
3260 ON I0 GOTO 1400,2000,2700,2300,2600,3300
3300 REM " --- Correct?
3320 LET V0$="S",V1$="C",V2$="",V0=1,V1=77,V2=L,K9$=W0$(1,24)
3325 LET V4$="<Enter>=OKay  <F2>=Change  D=Delete"
3330 GOSUB 7000
3340 IF V3=2 THEN GOTO 3200
3350 IF V$="" THEN GOTO 3400
3360 IF V$="D" THEN GOTO 3700
3370 GOTO 3300
3400 REM " --- Write
3410 PRECISION 2
3412 LET W[2]=W[2]*1
3414 PRECISION P[3]
3420 WRITE (PRE41_DEV,KEY=W0$(1,24))IOL=PRE41A
3430 GOSUB 5800
3450 LET L=L+1
3490 GOTO 1000
3700 REM " --- Delete
3720 REMOVE (PRE41_DEV,KEY=W0$(1,24),DOM=3730)
3730 DIM W[2]
3740 GOSUB 5800
3750 PRINT @(0,L),'CL',
3790 GOTO 1000
4000 REM " --- Options
4010 LET V0$="S",V1$="KC",V2$="Y",V3$="",V4$="Is The Contribution Information 
4010:Correct (Y/N/Review/List/Delete)? ",V0=7,V1=FNV(V4$),V2=22
4015 GOSUB 7000
4020 IF V3=4 THEN RUN "PRE.BA"
4030 IF V$="DELETE" THEN GOTO 4200
4040 IF V$="REVIEW" OR V$="R" THEN GOTO 4910
4050 IF V$="LIST" OR V$="L" THEN GOTO 4810
4060 IF V$="" THEN GOTO 4100
4070 ON POS(V$="YN") GOTO 4000,4100,1000
4100 IF A0$(12,1)="C" THEN RUN "PRE.BX" ELSE RUN "PRE.BF"
4200 REM " --- Delete
4210 REM " --- Delete Earnings Rec 
4220 READ (PRE11_DEV,KEY=A0$(1,21),DOM=4230)
4230 LET K11$=KEY(PRE11_DEV,END=4290)
4240 IF K11$(1,21)<>A0$(1,21) THEN GOTO 4290
4250 REMOVE (PRE11_DEV,KEY=K11$)
4260 GOTO 4230
4300 REM " --- Delete Deduction Rec 
4320 READ (PRE21_DEV,KEY=A0$(1,21),DOM=4330)
4330 LET K21$=KEY(PRE21_DEV,END=4390)
4340 IF K21$(1,21)<>A0$(1,21) THEN GOTO 4390
4350 REMOVE (PRE21_DEV,KEY=K21$)
4360 GOTO 4330
4400 REM " --- Delete Tax Rec 
4420 READ (PRE31_DEV1,KEY=A0$(1,21),DOM=4430)
4430 LET K31$=KEY(PRE31_DEV1,END=4490)
4440 IF K31$(1,21)<>A0$(1,21) THEN GOTO 4490
4450 REMOVE (PRE31_DEV1,KEY=K31$)
4460 GOTO 4430
4500 REM " --- Delete Contribution Rec
4520 READ (PRE41_DEV,KEY=A0$(1,21),DOM=4530)
4530 LET K41$=KEY(PRE41_DEV,END=4590)
4540 IF K41$(1,21)<>A0$(1,21) THEN GOTO 4590
4550 REMOVE (PRE41_DEV,KEY=K41$)
4560 GOTO 4530
4600 REM " --- Delete Accrual Rec
4620 READ (PRE51_DEV,KEY=A0$(1,21),DOM=4630)
4630 LET K51$=KEY(PRE51_DEV,END=4690)
4640 IF K51$(1,21)<>A0$(1,21) THEN GOTO 4690
4650 REMOVE (PRE51_DEV,KEY=K51$)
4660 GOTO 4630
4700 REM " --- Delete Header Rec
4720 REMOVE (PRE01_DEV,KEY=A0$(1,21),DOM=4730)
4730 LET K$=KEY(PRE01_DEV,END=4790)
4740 IF K$(1,21)<>A0$(1,21) THEN GOTO 4790
4750 REMOVE (PRE01_DEV,KEY=K$)
4760 GOTO 4730
4790 RUN "PRE.BA"
4800 REM " --- List
4820 GOSUB 5100
4830 GOTO 4000
4900 REM " --- Review
4920 READ (PRE41_DEV,KEY=W0$(1,22),DOM=4930)
4930 GOSUB 5400
4940 GOTO 1000
5000 REM " --- Display"
5010 LET X$="",Y0$(1)=""
5020 FIND (PRM10_DEV,KEY=N0$+"D"+W0$(25,2),DOM=5040)IOL=PRM10D
5030 LET X$=X0$(6,16)
5040 FIND (PRT31_DEV,KEY=A0$(1,11)+"D"+W0$(25,2),DOM=5050)IOL=PRT31A
5050 PRINT @(0,L),W0$(23,2),@(4),W0$(25,2)," ",X$,@(24),W[0]:M1$,W[1]:M3$,W[2]
5050::M1$,
5060 IF U0=1 THEN GOSUB 5800
5090 RETURN
5100 REM " --- List"
5110 GOSUB 5400
5120 READ (PRE41_DEV,KEY=W0$(1,22),DOM=5130)
5130 LET K$=KEY(PRE41_DEV,END=5300)
5150 IF K$(1,22)<>W0$(1,22) THEN GOTO 5300
5160 READ (PRE41_DEV)IOL=PRE41A
5200 IF L<=L9 THEN GOTO 5250
5210 LET V0$="S",V1$="CE",V2$="",V3$="",V4$="Press <Enter> To Continue ",V0=1,
5210:V1=FNV(V4$),V2=22
5215 GOSUB 7000
5220 IF V3=4 THEN GOTO 5300
5230 GOSUB 5400
5250 GOSUB 5000
5260 LET L=L+1,K9$=W0$(1,24)
5290 GOTO 5130
5300 RETURN
5400 REM " --- Clear Screen
5420 PRINT @(0,L1),'CE',
5440 LET L=L1
5490 RETURN
5800 REM " --- Update Totals"
5820 FOR X=0 TO LEN(X1$)/2-1
5830 IF X1$(X*2+1,2)="  " THEN GOTO 5950
5840 LET X0=1
5850 IF X2$(X+1,1)="-" THEN LET X0=-1
5860 LET T=NUM(X1$(X*2+1,2))
5870 LET T[T,0]=T[T,0]+X0*(W[2]+U[2])
5910 LET T[T,1]=T[T,1]+X0*(W[1]+U[1])
5950 NEXT X
5970 LET T3=T3+W[2]+U[2]
5980 PRINT @(5*M1,8),T3:M1$,
5990 RETURN
6500 REM " --- Rate
6510 LET W[0]=0,W[1]=0,W[2]=0,T=NUM(X0$(31,2))
6520 IF X0$(24,1)="N" THEN RETURN
6530 IF X0$(24,1)<>"F" THEN GOTO 6600
6540 LET W[2]=Z[0]
6550 IF W[2]=0 THEN LET W[2]=X[0]
6560 GOTO 6690
6600 IF X0$(24,1)="D" THEN LET W[0]=T[T,0]+T[T,2]
6610 IF X0$(24,1)="U" THEN LET W[0]=T[T,1]
6612 IF X0$(24,1)="D" THEN IF X0$(30,1)="R" THEN LET W[0]=T[T,3]
6614 IF X0$(24,1)="D" THEN IF X0$(30,1)="P" THEN LET W[0]=T[T,0]-T[T,3]
6615 IF W[0]=0 THEN RETURN
6620 LET W[1]=Z[0]
6630 IF W[1]=0 THEN LET W[1]=X[0]
6640 GOSUB 6700
6650 PRECISION 2
6660 LET W[2]=W[0]*W[1]
6670 IF X0$(24,1)="D" THEN LET W[2]=W[2]/100
6680 IF W[1]<>0 AND X[2]<>0 THEN IF W[1]*X[2]/100<W[2]+Y[13]+Y[14]+Y[15]+Y[16]
6680:+X3 THEN LET W[2]=X[0]*X[2]/100-Y[13]-Y[14]-Y[15]-Y[16]-X3
6685 PRECISION P[3]
6690 RETURN
6700 REM " --- Earnings Limit
6710 LET X1=0,X3=0
6720 IF A0$(13,2)>"01" THEN GOSUB 6900
6723 REM ""'D'=Cont,Z(1)=Emplee's Max Limit, X(2)=Max Limit Against whish the 
6723:wages to date are compared
6725 IF X0$(3,1)="D" THEN IF Z[1]<>0 THEN LET X[2]=Z[1]
6727 IF X[2]<>0 THEN IF Y[7]+Y[8]+Y[9]+Y[10]+X1=X[2] THEN LET W[0]=0; GOTO 679
6727:0; REM "At limit, no more
6730 IF X[2]<>0 THEN IF Y[7]+Y[8]+Y[9]+Y[10]+W[0]+X1>X[2] THEN LET W[0]=X[2]-Y
6730:[7]-Y[8]-Y[9]-Y[10]-X1
6790 RETURN
6900 REM " --- Other Totals
6910 READ (PRE31_DEV2,KEY=A0$(1,12),DOM=6920)
6920 LET K$=KEY(PRE31_DEV2,END=6990)
6930 IF K$(1,12)<>A0$(1,12) THEN GOTO 6990
6940 IF K$(1,14)>=A0$(1,14) THEN GOTO 6990
6945 READ (PRE31_DEV2)IOL=PRE31A
6950 IF LEN(K$)<24 THEN GOTO 6920
6960 IF V$(22,1)+V$(25,2)<>Y0$(12,3) THEN GOTO 6920
6970 LET X1=X1+X,X3=X3+Y
6980 GOTO 6920
6990 RETURN
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Function Definitions"
8080 DEF FNV(Q$)=42+INT(LEN(Q$)/2)
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN
9900 RUN "SYS.AA"
9999 END
